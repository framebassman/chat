name: Tests

on:
  push:
  pull_request:
    branches: [ master ]
    paths:
    - '**.cs'
    - '**.csproj'
    - 'Chat.Web/Client'

env:
  DOTNET_VERSION: '3.1' # The .NET SDK version to use

jobs:
  backend:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    # - name: Test
    #   run: dotnet test Chat.Tests.Integration --no-restore --verbosity normal
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: ./Chat.Web/Client
      - run: npm run build --if-present
        working-directory: ./Chat.Web/Client
      - run: npm test
        working-directory: ./Chat.Web/Client
  build-docker-contatiner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          build-args: |
            SENTRY_RELEASE_BUILDTIME=${{ env.VERSION }}
          tags: framebassman/chat:${{ env.VERSION }}
